var crypto = require('crypto');
var rand = require('csprng');
var user = require('config/models');


exports.register = function(email, password, firstname, lastname, city, street, gcmregid, callback) {
    var x = email;

    //Checking if password is strong enough:
    // At least one upperCase & one number
    // At least 5 characters
    var strongPwd = 0;

    if (password.length > 4) {
        //Only if password is long enough, looking at the pwd
        var i = 0;
        while (i <= password.length || strongPwd == 1.5) {
            character = password.charAt(i);
            if (!isNaN(character * 1) && (strongPwd != 0.5)) {
                strongPwd += 0.5;
            } else {
                if (character == character.toUpperCase() && strongPwd < 1) {
                    strongPwd++;
                }
            }
            i++;
        }
    }

    if (!(x.indexOf("@") == x.length)) {
        if (strongPwd != 1.5) {

            var temp = rand(160, 36);
            var newpass = temp + password;
            var token = crypto.createHash('sha512').update(email + rand).digest("hex");
            var hashed_password = crypto.createHash('sha512').update(newpass).digest("hex");

            var newuser = new user({
                token: token,
                email: email,
                hashed_password: hashed_password,
                firstname: firstname,
                lastname: lastname,
                city: city,
                street: street,
                gcmregid: gcmregid,
                salt: temp
            });

            user.find({
                email: email
            }, function(err, users) {
                var len = users.length;
                if (len == 0) {
                    newuser.save(function(err) {

                        callback({
                            'response': "Sucessfully Registered"
                        });

                    });
                } else {

                    callback({
                        'response': "Email already Registered"
                    });
                }
            });
        } else {
            callback({
                'response': "Password Weak"
            });
        }
    } else {
        callback({
            'response': "Email Not Valid"
        });
    }
}
