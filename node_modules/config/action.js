var crypto = require('crypto'); 
var rand = require('csprng'); 
var mongoose = require('mongoose'); 
var gravatar = require('gravatar'); 
var Event = require('config/modelEvent');  
var ActionModel = require('config/modelAction');

//Aggregation function
var getProgess = function(id_event) {
    Event.aggregate([
    	{ $match: {_id: id_event }},
        { $unwind: "$usersActing" }, 	// creates a doc for every array element - each action
        { $group: {
            _id: null,
            energy: { $sum: "$usersActing.amountEnergy"  }
        }}
    ], function (err, result) {
        if (err) {
            console.log(err);
            return;
        }
        console.log(result);
        return result;
            //console.log("**** RESULT " + result);
            //return JSON.stringify(result);
    });
}

exports.action = function(act,userEmail, callback) {  

    //Finding the last Event
    Event.findOne({}, {}, { sort: { 'date_action' : -1 } }, function(err, event) {

        //Add the action of the user to the ones of the actions
        var newAction = new ActionModel({ email : userEmail, amountEnergy : act });

	/*
        newAction.save(function(err) {
            if (err) throw err;
        });*/

        if(event.usersActing === undefined){
            event.usersActing[0] = newAction;
        }
        else{
            event.usersActing.push(newAction); 
        }
	
        event.save(function(err) {
            if (err) 
                throw err;
            console.log('Unexpected success!');    
        });
        
        getProgess(event._id);
        
        console.log("GETTING RESULT --> " + getProgess(event._id));
        var progress = getProgess(event._id);
        callback({'response':progress, 'res':"true"});  
    });
}
